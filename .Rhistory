reticulate::repl_python()
len(fruits)
fruits = ['apple', 'banana', 'cherry']
len(fruits)
print(my_var)
my_var = [1, 2, 3, 4]
print(my_var)
round(3.141592653589793)
round(3.141592653589793, 5)
help('pandas')  # Get help on the pandas library
#| label: variable example
#| eval: false
# Storing an integer
age = 25
# Storing a floating-point number
temperature = 98.6
print(age)          # Output: 25
print(temperature) # Output: 98.6
#| label: variable example
#| eval: false
# Storing an integer
age = 25
# Storing a floating-point number in Fahrenheit
temperature_fahrenheit = 98.6
# Converting Fahrenheit to Celsius
temperature_celsius = (temperature_fahrenheit - 32) * 5 / 9
print(age)          # Output: 25
print(temperature) # Output: 98.6
#| label: variable example
#| eval: false
# Storing an integer
age = 25
# Storing a floating-point number in Fahrenheit
temperature_fahrenheit = 98.6
# Converting Fahrenheit to Celsius
temperature_celsius = (temperature_fahrenheit - 32) * 5 / 9
print(age)          # Output: 25
print(temperature_celsius) # Output: 98.6
#| label: variable example
#| eval: false
# Storing an integer
age = 25
# Storing a floating-point number in Fahrenheit
temperature_fahrenheit = 100.6
# Converting Fahrenheit to Celsius
temperature_celsius = (temperature_fahrenheit - 32) * 5 / 9
print(age)
print(temperature_celsius)
!pip install pandas
conda install pandas
!conda install pandas
!conda list
!conda list
#| label: import
#| eval: false
#| echo: true
import math
# Now you can use any tool from the math toolbox
print(math.sqrt(16))  # Output: 4.0
print(math.pi)        # Output: 3.141592653589793
#| label: import
#| eval: false
#| echo: true
import pandas as pd
# Example: Reading a CSV file with pandas
# Assume we have a 'data.csv' file
data = pd.read_csv('data.csv')
# Display the first 5 rows of the data
print(data.head())   # Output: 3.141592653589793
data = pd.read_csv("customer_reviews.csv")
print(data.head())   # Output: 3.141592653589793
#| label: create data frame
#| eval: false
#| echo: true
# create vectors
title <- c("Star Wars", "The Empire Strikes Back", "Return of the Jedi")
year <- c(1977, 1980, 1983)
length.min <- c(121, 124, 133)
box.office.mil <- c(787, 534, 572)
# Creating the DataFrame
starwars_df = pd.DataFrame({
"Year": year_series,
"Title": title_series,
"Length": length_series,
"Gross": gross_series
})
#| label: create data frame
#| eval: false
#| echo: true
import pandas as pd
# Creating individual Series for each column
year_series = pd.Series([1977, 1980, 1983], name="Year")
title_series = pd.Series(["Star Wars", "Empire Strikes Back", "Return of the Jedi"], name="Title")
length_series = pd.Series([121, 124, 144], name="Length")  # Movie length in minutes
gross_series = pd.Series([787, 534, 572], name="Gross")  # Gross revenue in millions
# Creating the DataFrame
starwars_df = pd.DataFrame({
"Year": year_series,
"Title": title_series,
"Length": length_series,
"Gross": gross_series
})
# Displaying the DataFrame
print(starwars_df)
starwars_df['Title']
mean_length = starwars_df["Length"].mean()
mean_length
#| label: subsetting
#| eval: false
#| echo: true
starwars_df['Title']
mean_length = starwars_df["Length"].mean()
# Displaying the result
print("Mean Length of Movies:", mean_length)
starwars_df.dtypes
#| label: explore_data
#| eval: false
#| echo: true
# data values
starwars_df.dtypes
# summary statistics
print(starwars_df.describe())
starwars_df.shape
#| label: conditionals
#| eval: false
#| echo: true
water_cold = True
if water_cold:
print("Brrrrrr")
if water_cold:
print("Brrrrr")
else:
print("I can drink this)
water_temp = 0
if water_temp < 0:
print("Brrrrrr")
elif water_temp > 100:
print("tccchhhhh")
else:
print("I can drink this")
#| label: conditionals
#| eval: false
#| echo: true
water_cold = True
if water_cold:
print("Brrrrrr")
if water_cold:
print("Brrrrr")
else:
print("I can drink this)
water_temp = 110
if water_temp < 0:
print("Brrrrrr")
elif water_temp > 100:
print("tccchhhhh")
else:
print("I can drink this")
